1724189230
waR3U4bTeM%3A55d3bf5e833c76ee6e3c2f4be15fa1cd-843cab6827a9628b3045600b1702b65a
s:7500:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6Ijg0M2NhYjY4MjdhOTYyOGIzMDQ1NjAwYjE3MDJiNjVhIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTA6InBsdWdpbi5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czoxMDoicGx1Z2luLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MzU5MjoiPD9waHANCi8qDQpQbHVnaW4gTmFtZTogQ2FsZW5kYXJpbyBkZSBFdmVudG9zDQpEZXNjcmlwdGlvbjogUGx1Z2luIHBhcmEgbW9zdHJhciB1biBjYWxlbmRhcmlvIGRlIGV2ZW50b3MgY29uIHNhbnRvcy4NClZlcnNpb246IDEuMA0KQXV0aG9yOiBUdSBOb21icmUNCiovDQoNCi8vIFJlZ2lzdHJhciBlbCBzaG9ydGNvZGUgcGFyYSBtb3N0cmFyIGVsIGNhbGVuZGFyaW8NCmZ1bmN0aW9uIG1vc3RyYXJfY2FsZW5kYXJpb19ldmVudG9zKCkgew0KICAgIG9iX3N0YXJ0KCk7DQogICAgPz4NCiAgICA8ZGl2IGlkPSJjYWxlbmRhcmlvLWNvbnRhaW5lciI+DQogICAgICAgIDxkaXYgaWQ9ImNhbGVuZGFyaW8iPjwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxzdHlsZT4NCiAgICAjY2FsZW5kYXJpby1jb250YWluZXIgew0KICAgICAgICBtYXgtd2lkdGg6IDgwMHB4Ow0KICAgICAgICBtYXJnaW46IDAgYXV0bzsNCiAgICB9DQogICAgLmNhbGVuZGFyLXRhYmxlIHsNCiAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7DQogICAgfQ0KICAgIC5jYWxlbmRhci10YWJsZSB0aCwgLmNhbGVuZGFyLXRhYmxlIHRkIHsNCiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsNCiAgICAgICAgcGFkZGluZzogNXB4Ow0KICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICB9DQogICAgPC9zdHlsZT4NCiAgICA8c2NyaXB0Pg0KICAgIGZ1bmN0aW9uIENhbGVuZGFyKGVsZW1lbnQpIHsNCiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDsNCiAgICAgICAgdGhpcy5yZW5kZXIgPSBmdW5jdGlvbih5ZWFyLCBtb250aCkgew0KICAgICAgICAgICAgdmFyIGNhbGVuZGFySFRNTCA9ICc8dGFibGUgY2xhc3M9ImNhbGVuZGFyLXRhYmxlIj4nOw0KICAgICAgICAgICAgY2FsZW5kYXJIVE1MICs9ICc8dHI+PHRoIGNvbHNwYW49IjciPicgKyB5ZWFyICsgJyAnICsgKG1vbnRoICsgMSkgKyAnPC90aD48L3RyPic7DQogICAgICAgICAgICBjYWxlbmRhckhUTUwgKz0gJzx0cj48dGg+RG9taW5nbzwvdGg+PHRoPkx1bmVzPC90aD48dGg+TWFydGVzPC90aD48dGg+TWnDqXJjb2xlczwvdGg+PHRoPkp1ZXZlczwvdGg+PHRoPlZpZXJuZXM8L3RoPjx0aD5Tw6FiYWRvPC90aD48L3RyPic7DQogICAgICAgICAgICANCiAgICAgICAgICAgIHZhciBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKHllYXIsIG1vbnRoLCAxKTsNCiAgICAgICAgICAgIHZhciBmaXJzdERheSA9IG5ldyBEYXRlKHllYXIsIG1vbnRoLCAxKS5nZXREYXkoKTsNCiAgICAgICAgICAgIHZhciBsYXN0RGF5ID0gbmV3IERhdGUoeWVhciwgbW9udGggKyAxLCAwKS5nZXREYXRlKCk7DQogICAgICAgICAgICANCiAgICAgICAgICAgIGNhbGVuZGFySFRNTCArPSAnPHRyPic7DQogICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZpcnN0RGF5OyBpKyspIHsNCiAgICAgICAgICAgICAgICBjYWxlbmRhckhUTUwgKz0gJzx0ZD48L3RkPic7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBmb3IgKHZhciBkYXkgPSAxOyBkYXkgPD0gbGFzdERheTsgZGF5KyspIHsNCiAgICAgICAgICAgICAgICBjYWxlbmRhckhUTUwgKz0gJzx0ZD4nICsgZGF5ICsgJzwvdGQ+JzsNCiAgICAgICAgICAgICAgICBpZiAoKGZpcnN0RGF5ICsgZGF5KSAlIDcgPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgY2FsZW5kYXJIVE1MICs9ICc8L3RyPjx0cj4nOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGNhbGVuZGFySFRNTCArPSAnPC90cj4nOw0KICAgICAgICAgICAgY2FsZW5kYXJIVE1MICs9ICc8L3RhYmxlPic7DQogICAgICAgICAgICANCiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUwgPSBjYWxlbmRhckhUTUw7DQogICAgICAgIH07DQogICAgfQ0KDQogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCkgew0KICAgICAgICB2YXIgY2FsZW5kYXJFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYWxlbmRhcmlvJyk7DQogICAgICAgIHZhciBjYWxlbmRhciA9IG5ldyBDYWxlbmRhcihjYWxlbmRhckVsKTsNCiAgICAgICAgdmFyIHRvZGF5ID0gbmV3IERhdGUoKTsNCiAgICAgICAgdmFyIHllYXIgPSB0b2RheS5nZXRGdWxsWWVhcigpOw0KICAgICAgICB2YXIgbW9udGggPSB0b2RheS5nZXRNb250aCgpOw0KICAgICAgICBjYWxlbmRhci5yZW5kZXIoeWVhciwgbW9udGgpOw0KDQogICAgICAgIC8vIEFncmVnYXIgZXZlbnRvIGFsIHBhc2FyIGVsIG1vdXNlIHNvYnJlIHVuIGTDrWENCiAgICAgICAgY2FsZW5kYXJFbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCBmdW5jdGlvbihldmVudCkgew0KICAgICAgICAgICAgdmFyIHRhcmdldCA9IGV2ZW50LnRhcmdldDsNCiAgICAgICAgICAgIGlmICh0YXJnZXQudGFnTmFtZSA9PT0gJ1REJyAmJiB0YXJnZXQudGV4dENvbnRlbnQudHJpbSgpICE9PSAnJykgew0KICAgICAgICAgICAgICAgIHZhciBkYXkgPSB0YXJnZXQudGV4dENvbnRlbnQ7DQogICAgICAgICAgICAgICAgdmFyIG1vbnRoV2l0aFplcm8gPSAobW9udGggKyAxKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyk7DQogICAgICAgICAgICAgICAgdmFyIGZvcm1hdHRlZERhdGUgPSB5ZWFyICsgJy0nICsgbW9udGhXaXRoWmVybyArICctJyArIGRheTsNCg0KICAgICAgICAgICAgICAgIG9idGVuZXJTYW50byhmb3JtYXR0ZWREYXRlLCBmdW5jdGlvbihzYW50bykgew0KICAgICAgICAgICAgICAgICAgICBpZiAoc2FudG8pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldC5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgJ1NhbnRvOiAnICsgc2FudG8pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0pOw0KDQogICAgICAgIC8vIEZ1bmNpw7NuIHBhcmEgb2J0ZW5lciBlbCBzYW50byBkZWwgYXJjaGl2byBKU09ODQogICAgICAgIGZ1bmN0aW9uIG9idGVuZXJTYW50byhkYXRlLCBjYWxsYmFjaykgew0KICAgICAgICAgICAgdmFyIHNhbnRvc0pTT04gPSB7DQogICAgICAgICAgICAgICAgIjIwMjMtMDgtMTUiOiAiQXN1bmNpw7NuIGRlIGxhIFZpcmdlbiBNYXLDrWEiLA0KICAgICAgICAgICAgICAgICIyMDIzLTA4LTE2IjogIlNhbiBSb3F1ZSINCiAgICAgICAgICAgICAgICAvLyBBZ3JlZ2EgbcOhcyBkYXRvcyBhcXXDrS4uLg0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgaWYgKHNhbnRvc0pTT05bZGF0ZV0pIHsNCiAgICAgICAgICAgICAgICBjYWxsYmFjayhzYW50b3NKU09OW2RhdGVdKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9KTsNCiAgICA8L3NjcmlwdD4NCiAgICA8P3BocA0KICAgIHJldHVybiBvYl9nZXRfY2xlYW4oKTsNCn0NCmFkZF9zaG9ydGNvZGUoJ2NhbGVuZGFyaW9fZXZlbnRvcycsICdtb3N0cmFyX2NhbGVuZGFyaW9fZXZlbnRvcycpOw0KPz4NCiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YToxOntzOjI5OiJcbW9zdHJhcl9jYWxlbmRhcmlvX2V2ZW50b3MoKSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8iOjg6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI5OiJcbW9zdHJhcl9jYWxlbmRhcmlvX2V2ZW50b3MoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjI2OiJtb3N0cmFyX2NhbGVuZGFyaW9fZXZlbnRvcyI7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBhcmd1bWVudHMiO2E6MDp7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBkb2NCbG9jayI7TjtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjEwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTAzO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo2MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAG1ldGFkYXRhIjthOjA6e319fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";